-- #################################################### --

local si_cflts = class(Node)

function si_cflts:get_help(out)
  out.write[[ Convert Floating to Signed Integer  

 TODO ]]
end

function si_cflts:new()
  Node.new(self)
  self.ra  = self.add_port(Input('ra'))
  self.rt  = self.add_port(Output('rt'))
  self.scale7 = 0
end

function si_cflts:config(props)
  Node.config(self, props)
  props.delete('Name')
  props.text_input(
                    'scale7',
                    function() return self.scale7 end,
                    function(v) self.scale7 = v end,
                    function(v) return math.evaluate(v) end
                  )
end

function si_cflts:gen_code(out, scratch)
  local rt  = 'r' .. self.rt.hex()
  local ra  = 'r' .. self.ra.get_output().hex()
  local scale7 = math.evaluate(self.scale7)
  out.write( '\t .reg ' .. rt .. '\n')
  out.write( '\t cflts ' .. rt .. ', ' .. ra .. ', ' .. scale7 .. '\n' )
end

function si_cflts:get_tip(out)
  out.write('Convert Floating to Signed Integer ')
end

function si_cflts:get_type(port)
  return 'qword'
end

-- #################################################### --

local si_cfltu = class(Node)

function si_cfltu:get_help(out)
  out.write[[ Convert Floating to Unsigned Integer  

 TODO ]]
end

function si_cfltu:new()
  Node.new(self)
  self.ra  = self.add_port(Input('ra'))
  self.rt  = self.add_port(Output('rt'))
  self.scale7 = 0
end

function si_cfltu:config(props)
  Node.config(self, props)
  props.delete('Name')
  props.text_input(
                    'scale7',
                    function() return self.scale7 end,
                    function(v) self.scale7 = v end,
                    function(v) return math.evaluate(v) end
                  )
end

function si_cfltu:gen_code(out, scratch)
  local rt  = 'r' .. self.rt.hex()
  local ra  = 'r' .. self.ra.get_output().hex()
  local scale7 = math.evaluate(self.scale7)
  out.write( '\t .reg ' .. rt .. '\n')
  out.write( '\t cfltu ' .. rt .. ', ' .. ra .. ', ' .. scale7 .. '\n' )
end

function si_cfltu:get_tip(out)
  out.write('Convert Floating to Unsigned Integer ')
end

function si_cfltu:get_type(port)
  return 'qword'
end

register {
  __name = 'SPU [Float to Integer]',
  __prologue = '',
  __epilogue = '',
  ['cflts'] = si_cflts,
  ['cfltu'] = si_cfltu,
}
