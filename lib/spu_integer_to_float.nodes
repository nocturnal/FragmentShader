-- #################################################### --

local si_csflt = class(Node)

function si_csflt:get_help(out)
  out.write[[ Convert Signed Integer to Floating  

 TODO ]]
end

function si_csflt:new()
  Node.new(self)
  self.ra  = self.add_port(Input('ra'))
  self.rt  = self.add_port(Output('rt'))
  self.scale7 = 0
end

function si_csflt:config(props)
  Node.config(self, props)
  props.delete('Name')
  props.text_input(
                    'scale7',
                    function() return self.scale7 end,
                    function(v) self.scale7 = v end,
                    function(v) return math.evaluate(v) end
                  )
end

function si_csflt:gen_code(out, scratch)
  local rt  = 'r' .. self.rt.hex()
  local ra  = 'r' .. self.ra.get_output().hex()
  local scale7 = math.evaluate(self.scale7)
  out.write( '\t .reg ' .. rt .. '\n')
  out.write( '\t csflt ' .. rt .. ', ' .. ra .. ', ' .. scale7 .. '\n' )
end

function si_csflt:get_tip(out)
  out.write('Convert Signed Integer to Floating ')
end

function si_csflt:get_type(port)
  return 'qword'
end

-- #################################################### --

local si_cuflt = class(Node)

function si_cuflt:get_help(out)
  out.write[[ Convert Unsigned Integer to Floating  

 TODO ]]
end

function si_cuflt:new()
  Node.new(self)
  self.ra  = self.add_port(Input('ra'))
  self.rt  = self.add_port(Output('rt'))
  self.scale7 = 0
end

function si_cuflt:config(props)
  Node.config(self, props)
  props.delete('Name')
  props.text_input(
                    'scale7',
                    function() return self.scale7 end,
                    function(v) self.scale7 = v end,
                    function(v) return math.evaluate(v) end
                  )
end

function si_cuflt:gen_code(out, scratch)
  local rt  = 'r' .. self.rt.hex()
  local ra  = 'r' .. self.ra.get_output().hex()
  local scale7 = math.evaluate(self.scale7)
  out.write( '\t .reg ' .. rt .. '\n')
  out.write( '\t cuflt ' .. rt .. ', ' .. ra .. ', ' .. scale7 .. '\n' )
end

function si_cuflt:get_tip(out)
  out.write('Convert Unsigned Integer to Floating ')
end

function si_cuflt:get_type(port)
  return 'qword'
end

register {
  __name = 'SPU [Integer to Float]',
  __prologue = '',
  __epilogue = '',
  ['csflt'] = si_csflt,
  ['cuflt'] = si_cuflt,
}
