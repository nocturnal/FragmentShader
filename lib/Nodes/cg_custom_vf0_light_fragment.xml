<?xml version="1.0"?>
<library path="Cg/CustomVF0 Fragment Lighting">
	<node type="[IN] (sampler2D) Texture Sampler (decal0)">
		<description>Access textures (decal0-decal2)</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">sampler2D</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
			<property name="choice_ndx" type="list">
				<options>
					<option>decal0</option>
					<option>decal1</option>
					<option>decal2</option>
				</options>
				<on-change>node.Name.set_value('[IN] (sampler2D) Texture Sampler (' .. node.choice_ndx.get_value() .. ')')</on-change>
			</property>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} ${node.choice_ndx.get_value()}
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float2) UV">
		<description>Texture coordinates</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float2</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} float2(uv.xy)
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float4) Position">
		<description>Projected position</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float4</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} position
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float4) Vertex Arguments (arg0)">
		<description>Values passed in from the vertex setup fragment</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float4</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
			<property name="choice_ndx" type="list">
				<options>
					<option>arg0</option>
					<option>arg1</option>
					<option>arg2</option>
				</options>
				<on-change>node.Name.set_value('[IN] (float4) Vertex Arguments (' .. node.choice_ndx.get_value() .. ')')</on-change>
			</property>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} ${node.choice_ndx.get_value()}
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float) Normal Scale">
		<description>Normal scale set in shader</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} float(normal_scale.x)
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float4) Light Color">
		<description>The color of the current light</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float4</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} light_color[i]
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float4) Lighting Coefficients (c0)">
		<description>Per light values assigned in fragment setup</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float4</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
			<property name="choice_ndx" type="list">
				<options>
					<option>c0</option>
					<option>c1</option>
					<option>c2</option>
					<option>c3</option>
					<option>c4</option>
				</options>
				<on-change>node.Name.set_value('[IN] (float4) Lighting Coefficients (' .. node.choice_ndx.get_value() .. ')')</on-change>
			</property>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} ${node.choice_ndx.get_value()}
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float4) Vertex Light Argument">
		<description>Per light value assigned in the vertex light fragment</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float4</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} light_arg[i]
			</code>
		</code-generation>
	</node>
	<node type="[OUT] (float4) Final Light Color">
		<description>Assigns the (additive color) contribution by the current light</description>
		<ports>
			<input name="a">
				<check-type method="fixed" target="*">float4</check-type>
			</input>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				final_light_color = r${node.a.get_source().uid()};
			</code>
		</code-generation>
	</node>
</library>
