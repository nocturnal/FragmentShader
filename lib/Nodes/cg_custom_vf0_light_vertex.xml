<?xml version="1.0"?>
<library path="Cg/CustomVF0 Vertex Lighting">
	<node type="[IN] (float4) Local Position">
		<description>Position of current vertex in local coordinates</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float4</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} position
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float3) Local Normal">
		<description>Normal of current vertex in local coordinates</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float3</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} normal
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float4) Local Tangent">
		<description>Tagent of current vertex in local coordinates</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float4</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} tangent
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float4x4) Local to World Matrix">
		<description>Matrix transforms from local coordinates to world coordinates</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float4x4</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} local
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float2) UV">
		<description>Texture coordinates at current vertex</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float2</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} uv
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float4x4) View Projection Matrix">
		<description>Matrix transform from local coordinates to viewport coordinates</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float4x4</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} view_proj
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float3) World Bi-Normal">
		<description>Bi-normal of current vertex in world space</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float3</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} ws_binormal
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float3) World Eye Position">
		<description>Position of "eye" (camera) in world space</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float3</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} eye_position
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float3) World Normal">
		<description>Normal of current vertex in world space</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float3</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} ws_normal
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float4) World Position">
		<description>Position of current vertex in world space</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float4</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} ws_pos
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float3) World Tangent">
		<description>Tangent of current vertex in world space</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float3</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} ws_tangent
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float3) World Light Position">
		<description>Position of current light in world space</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float3</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} lights[i].position
			</code>
		</code-generation>
	</node>
	<node type="[IN] (float4) Lighting Coefficients (c0)">
		<description>Lighting values assigned in vertex setup shader</description>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float4</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
			<property name="choice_ndx" type="list">
				<options>
					<option>c0</option>
					<option>c1</option>
					<option>c2</option>
					<option>c3</option>
					<option>c4</option>
				</options>
				<on-changed>node.Name.set_value('[IN] (float4) Lighting Coefficients (' .. node.choice_ndx.get_value() .. ')')</on-changed>
			</property>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				#define r${node.d.uid()} ${node.choice_ndx.get_value()}
			</code>
		</code-generation>
	</node>
	<node type="[OUT] (float4) Light Argument">
		<description>Value of current light interpolated and passed to fragment shaders</description>
		<ports>
			<input name="a">
				<check-type method="fixed" target="*">float4</check-type>
			</input>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">
				out_light_arg[i] = r${node.a.get_source().uid()};
			</code>
		</code-generation>
	</node>
</library>
