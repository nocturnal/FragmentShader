<?xml version="1.0"?>
<library path="Cg/C5E5 vertex lighting">
	<node type="Light Position (float3)">
		<description>TODO</description>
		<tool-tip>light.position</tool-tip>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float3</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">#define r${node.d.uid()} light.position</code>
		</code-generation>
	</node>
	<node type="Light Color (float3)">
		<description>TODO</description>
		<tool-tip>light.color</tool-tip>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float3</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">#define r${node.d.uid()} light.color</code>
		</code-generation>
	</node>
	<node type="Position (float3)">
		<description>TODO</description>
		<tool-tip>position</tool-tip>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float3</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">#define r${node.d.uid()} P</code>
		</code-generation>
	</node>
	<node type="Normal (float3)">
		<description>TODO</description>
		<tool-tip>normal</tool-tip>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float3</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">#define r${node.d.uid()} N</code>
		</code-generation>
	</node>
	<node type="Eye Position (float3)">
		<description>TODO</description>
		<tool-tip>eye_position</tool-tip>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float3</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">#define r${node.d.uid()} eyePosition</code>
		</code-generation>
	</node>
	<node type="Shininess (float)">
		<description>TODO</description>
		<tool-tip>shininess</tool-tip>
		<ports>
			<output name="d">
				<get-type method="fixed" target="*">float</get-type>
			</output>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">#define r${node.d.uid()} shininess</code>
		</code-generation>
	</node>
	<node type="[OUT] Diffuse Color (float3)">
		<description>TODO</description>
		<tool-tip>diffuse_color</tool-tip>
		<ports>
			<input name="a">
				<check-type method="any" target="*"/>
			</input>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">diffuseResult = r${node.a.get_source().uid()}</code>
		</code-generation>
	</node>
	<node type="[OUT] Specular Color (float3)">
		<description>TODO</description>
		<tool-tip>specular_color</tool-tip>
		<ports>
			<input name="a">
				<check-type method="any" target="*"/>
			</input>
		</ports>
		<properties>
			<default-properties/>
		</properties>
		<code-generation>
			<code method="var-parse" target="*">specularResult = r${node.a.get_source().uid()}</code>
		</code-generation>
	</node>
</library>
