NODENAME	SPU [Rotate and Mask (Shift Right)]
rotqmbi 	"rt, ra, rb"	Rotate and Mask Quadword by Bits 	rt = ra >> (-(rb.b[3] & 0x07))
rotqmbii 	"rt, ra, s3"	Rotate and Mask Quadword by Bits Immediate 	rt = ra >> (-s3 & 0x07)
rotqmby 	"rt, ra, rb"	Rotate and Mask Quadword by Bytes 	rt = ra >> ((-rb.b[3] & 0x1F) * 8)
rotqmbyi 	"rt, ra, s6"	Rotate and Mask Quadword by Bytes Immediate 	rt = ra >> ((-s6 & 0x1F) * 8)
rotqmbybi 	"rt, ra, rb"	Rotate and Mask Quadword Bytes from Bit Shift Count	rt = ra >> (-(rb.b[3] & 0xF8) & 0xF8)
rotm 	"rt, ra, rb"	Rotate and Mask Word 	rt.w[n] = ra.w[n] >> (rb.w[n] & 0x3F)
rotmi 	"rt, ra, s7"	Rotate and Mask Word Immediate 	rt.w[n] = ra.w[n] >> (-s7 & 0x3F)
rothm 	"rt, ra, rb"	Rotate and Mask Halfword 	rt.h[n] = ra.h[n] >> (-rb.h[n] & 0x1F)
rothmi 	"rt, ra, s6"	Rotate and Mask Halfword Immediate 	rt.h[n] = ra.h[n] >> (-s6 & 0x1F)
rotma 	"rt, ra, rb"	Rotate and Mask Algebraic Word 	rt.w[n] = ra.w[n] >> (-rb.w[n] & 0x3F)
rotmai 	"rt, ra, s7"	Rotate and Mask Algebraic Word Immediate 	rt.w[n] = ra.w[n] >> (-s7 & 0x3F)
rotmah 	"rt, ra, rb"	Rotate and Mask Algebraic Halfword 	rt.h[n] = ra.h[n] >> (-rb.h[n] & 0x1F)
rotmahi 	"rt, ra, s6"	Rotate and Mask Algebraic Halfword Immediate 	rt.h[n] = ra.h[n] >> (-s6 & 0x3F)
